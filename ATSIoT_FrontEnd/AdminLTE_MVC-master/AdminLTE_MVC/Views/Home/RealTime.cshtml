@model AdminLTE_MVC.Models.DataPoint
@{
    ViewBag.Title = "Dashboard";
}

<head>
    <!-- CanvasJS -->
    <script src="~/Content/AdminLTE/js/plugins/CanvasJS/canvasjs.min.js"></script>

    @Scripts.Render(BundleConfig.BundlesJquery)
    <!--Real Time-->

    <script type="text/javascript">
	window.onload = function () {

		var dps = []; // dataPoints

		var chart = new CanvasJS.Chart("realtimeContainer",{
			title :{
				text: "Live Data "
			},
			toolTip: {
			    contentFormatter: function (e) {
			        var content = "";
			        for (var i = 0; i < e.entries.length; i++) {
			            content = CanvasJS.formatDate(e.entries[i].dataPoint.x, "HH:mm:ss:ff MM/DD/YYYY") + " - " + e.entries[i].dataPoint.y + "F";
			        }
			        return content;
			    }
			},

			data: [{
				type: "line",
				dataPoints: dps
			}]
		});

		var xVal = new Date();
		var yVal = 0;
		var updateInterval = 100;
		var dataLength = 100; // number of dataPoints visible at any point

		var updateChart = function (count) {
			count = count || 1;
			// count is number of times loop runs to generate random dataPoints.

			for (var j = 0; j < count; j++) {
			    //xVal = new Date()
                
			    xVal = new Date("@Model.X"); 
			    yVal = parseFloat("@Model.Y");
			    console.log(xVal);
			    console.log(yVal);
			    dps.push({
					x: xVal,
					y: yVal,
				});
			};
			if (dps.length > dataLength)
			{
				dps.shift();
			}

			chart.render();

		};

		// generates first set of dataPoints
		updateChart(dataLength);

		// update chart after specified time.
		setInterval(function(){updateChart()}, updateInterval);

	}
    </script>

</head>

<body>

</body>
<section class="content">

    <!-- Small boxes (Stat box) -->
    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <h1>
                Dashboard
                <small>rasberry-pi-II</small>
            </h1>
            <ol class="breadcrumb">
                <li class="active">RealTime</li>
                <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i> History</a></li>
            </ol>
        </section>

        <!-- Main content -->
        <section class="content">

            <div class="row">
                <div class="col-md-12">
                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Real Time</h3>
                            <div class="box-tools pull-right">
                                <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                                <div class="btn-group">
                                    <button class="btn btn-box-tool dropdown-toggle" data-toggle="dropdown"><i class="fa fa-wrench"></i></button>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><a href="#">Action</a></li>
                                        <li><a href="#">Another action</a></li>
                                        <li><a href="#">Something else here</a></li>
                                        <li class="divider"></li>
                                        <li><a href="#">Separated link</a></li>
                                    </ul>
                                </div>
                                <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div><!-- /.box-header -->
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-8">
                                    <p class="text-center">
                                        <strong>Real Time</strong>
                                    </p>
                                    <div class="realtime">
                                        <!-- Chart Canvas -->
                                        <div id="realtimeContainer" style="height: 300px; width: 100%;">
                                        </div><!-- /.chart-responsive -->
                                    </div><!-- /.col -->

                                </div><!-- /.col -->
                            </div><!-- /.row -->
                        </div><!-- ./box-body -->
                    </div><!-- /.row -->
                </div><!-- /.box-footer -->
            </div>





            <div class="row">
            </div><!-- /.row -->
            <!-- top row -->
            <div class="row">
                <div class="col-xs-12 connectedSortable">
                </div><!-- /.col -->
            </div>
            <!-- /.row -->
            <!-- Main row -->
            <div class="row">
            </div><!-- /.row (main row) -->
        </section>
</section>











@*<script type="text/javascript">
    var dps = []; // dataPoints
    var chart = new CanvasJS.Chart("realtimeContainer",
        {
            zoomEnabled: true,
            title: {
                        text: "Temperature"
            },
            toolTip: {
                contentFormatter: function (e) {
                    var content = "";
                    for (var i = 0; i < e.entries.length; i++) {
                        content = CanvasJS.formatDate(e.entries[i].dataPoint.x, "HH:mm:ss:ff MM/DD/YYYY") + " - " + e.entries[i].dataPoint.y + "F";
                    }
                    return content;
                }
            },
            axisX: {
                title: "time",
                gridThickness: 2,
                interval: 2,
                intervalType: "hour",
                valueFormatString: "hh mm ss TT K",
                labelAngle: -20
            },
            axisY: {
                title: "Temperature (F)"
            },
            data: [{
                type: "line",
                dataPoints: dps
            }]
        });
    var updateInterval = 100;
</script>

@foreach (var item in Model)
{
    <script>
        console.log("in");
        dps.push({
            x: new Date("@item.X"),
            y: parseInt("@item.Y")
        });
    </script>
}
<script>
    console.log(dps);
</script>




<script>
    chart.render();
</script>*@

